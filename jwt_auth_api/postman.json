{
	"info": {
		"_postman_id": "8f208256-b72d-4c09-a8de-be984a74a7d3",
		"name": "Odoo JWT Authentication API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9876522"
	},
	"item": [
		{
			"name": "User Login",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\":\"admin\",\n    \"password\":\"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"JWT Token is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('token');",
							"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Token Refresh",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"{{jwt_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/auth/refresh",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"auth",
						"refresh"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Refreshed JWT Token is returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('token');",
							"    pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Protected Route",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/api/protected",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"protected"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Protected route is accessed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData.message).to.eql('Access granted');",
							"});"
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://0.0.0.0:8069",
			"type": "string"
		}
	]
}
